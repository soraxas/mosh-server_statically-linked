name: docker build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      
    - name: build image
      run: docker build . -t mosh

    - name: copy statically built binary
      run: |
        id=$(docker create mosh)
        docker cp $id:/usr/bin/mosh-server .

    - uses: actions/upload-artifact@v2
      with:
        name: mosh-server
        path: mosh-server

    #############################################

    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Check outputs
      run: echo ${{ steps.vars.outputs.sha_short }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.vars.outputs.sha_short }}
        release_name: "mosh-server (SHA: ${{ steps.vars.outputs.sha_short }})"
        draft: false
        prerelease: false
    - name: Upload Release Asset Linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: mosh-server
        asset_name: mosh-server
        asset_content_type: application/octet-stream
